name: 测试和覆盖率检查

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    - name: 运行测试
      run: npm run test:coverage
      
    - name: 上传覆盖率报告
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: 检查覆盖率阈值
      run: |
        # 检查覆盖率是否达到阈值
        if [ -f "coverage/coverage-summary.json" ]; then
          COVERAGE=$(node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            console.log(Math.round(total.lines.pct));
          ")
          
          if [ $COVERAGE -lt 70 ]; then
            echo "❌ 覆盖率低于70%: $COVERAGE%"
            exit 1
          else
            echo "✅ 覆盖率达标: $COVERAGE%"
          fi
        fi
        
    - name: 生成测试报告
      if: always()
      run: |
        # 生成测试摘要
        echo "# 测试报告" > test-report.md
        echo "" >> test-report.md
        echo "## 执行时间" >> test-report.md
        echo "- 开始时间: ${{ github.event.head_commit.timestamp }}" >> test-report.md
        echo "- 结束时间: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> test-report.md
        echo "" >> test-report.md
        echo "## 覆盖率" >> test-report.md
        if [ -f "coverage/coverage-summary.json" ]; then
          node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            console.log('- 语句覆盖率:', total.statements.pct + '%');
            console.log('- 分支覆盖率:', total.branches.pct + '%');
            console.log('- 函数覆盖率:', total.functions.pct + '%');
            console.log('- 行覆盖率:', total.lines.pct + '%');
          " >> test-report.md
        fi
        
    - name: 上传测试报告
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: |
          test-report.md
          coverage/
          test-results/
          
  performance:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    - name: 运行性能测试
      run: npm run test:performance
      
    - name: 上传性能报告
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: test-results/performance-report.json
        
  quality-gate:
    runs-on: ubuntu-latest
    needs: [test, performance]
    
    steps:
    - name: 下载测试报告
      uses: actions/download-artifact@v3
      with:
        name: test-report
        
    - name: 下载性能报告
      uses: actions/download-artifact@v3
      with:
        name: performance-report
        
    - name: 质量门禁检查
      run: |
        echo "🔍 执行质量门禁检查..."
        
        # 检查测试是否通过
        if [ "${{ needs.test.result }}" != "success" ]; then
          echo "❌ 测试失败，质量门禁未通过"
          exit 1
        fi
        
        # 检查覆盖率
        if [ -f "coverage/coverage-summary.json" ]; then
          COVERAGE=$(node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            console.log(Math.round(total.lines.pct));
          ")
          
          if [ $COVERAGE -lt 70 ]; then
            echo "❌ 覆盖率低于70%: $COVERAGE%，质量门禁未通过"
            exit 1
          fi
        fi
        
        # 检查性能
        if [ -f "test-results/performance-report.json" ]; then
          SLOW_TESTS=$(node -e "
            const fs = require('fs');
            const perf = JSON.parse(fs.readFileSync('test-results/performance-report.json', 'utf8'));
            const slowTests = perf.performanceDistribution?.slow || 0;
            console.log(slowTests);
          ")
          
          if [ $SLOW_TESTS -gt 10 ]; then
            echo "❌ 慢速测试过多: $SLOW_TESTS，质量门禁未通过"
            exit 1
          fi
        fi
        
        echo "✅ 质量门禁检查通过"
        
    - name: 发送通知
      if: always()
      run: |
        if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.performance.result }}" == "success" ]; then
          echo "🎉 所有检查通过！"
        else
          echo "⚠️ 部分检查失败，请查看详细报告"
        fi
